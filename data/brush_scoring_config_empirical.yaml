# Empirical Brush Scoring Configuration
# Based on strategy analysis of 334 test cases from correct_matches.yaml
#
# Key Findings:
# Note: During optimization, we use bypass_correct_matches=True to avoid trivial 100% success
# The 92.3% figure was from when bypass_correct_matches=False (not useful for weight tuning)
# - When bypassing correct_matches.yaml (bypass_correct_matches=True):
#   * automated_split: 44.4% wins
#   * known_brush: 39.5% wins
#   * full_input_component_matching: 15.4% wins
#   * other_brush: 0.6% wins
# - This shows which strategies actually work and need higher weights

brush_scoring_weights:
  base_strategies:
    # Empirical win rates from strategy analysis (bypassing correct_matches.yaml)
    automated_split: 43.1 # 144/334 wins (43.1%) - highest performer
    known_brush: 38.3 # 128/334 wins (38.3%) - second highest
    full_input_component_matching: 15.0 # 50/334 wins (15.0%) - moderate
    other_brush: 0.6 # 2/334 wins (0.6%) - low performer

    # Disabled strategies (0 wins in empirical analysis)
    omega_semogue_brush: 0.0 # 0 wins (0.0%) - disabled
    zenith_brush: 0.0 # 0 wins (0.0%) - disabled
    known_split: 0.0 # 0 wins (0.0%) - brush_splits.yaml is empty

  strategy_modifiers:
    automated_split:
      multiple_brands: 25.0 # Penalty for ambiguous brand detection
      handle_weight: 1.2 # Boost handle component scoring
      knot_weight: 1.2 # Boost knot component scoring
      handle_brand_without_knot_brand: -25.0 # Penalty for incomplete matches
      high_confidence: 30.0 # Reward for clear delimiter patterns
      single_delimiter: 20.0 # Reward for single clear delimiter
      multiple_delimiters: -20.0 # Penalty for ambiguous delimiters
      fiber_consistency: 25.0 # Reward when fiber matches expectations

    full_input_component_matching:
      handle_match: 30.0 # Reward for handle component match
      knot_match: 30.0 # Reward for knot component match
      fiber_match: 25.0 # Reward for fiber type match
      size_match: 20.0 # Reward for size specification match

    # handle_matching and knot_matching modifiers removed - these are not standalone strategies
    # They are only used internally by split matchers for scoring their internal logic

    known_brush:
      exact_match: 35.0 # Reward for exact catalog match
      brand_fallback: 20.0 # Reward for brand-only match
      fiber_consistency: 15.0 # Reward for fiber consistency

    # known_split modifiers removed - strategy is disabled due to empty brush_splits.yaml

    omega_semogue_brush:
      model_pattern: 25.0 # Reward for Semogue model patterns
      fiber_default: 15.0 # Reward for boar fiber default
      traditional_numbering: 20.0 # Reward for traditional model numbers

    zenith_brush:
      model_pattern: 25.0 # Reward for Zenith model patterns
      fiber_default: 15.0 # Reward for boar fiber default
      b_series_recognition: 20.0 # Reward for B-series model recognition

    other_brush:
      generic_pattern: 20.0 # Reward for generic brush patterns
      brand_recognition: 15.0 # Reward for brand name recognition
      fiber_detection: 15.0 # Reward for fiber type detection
